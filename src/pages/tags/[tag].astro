---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from 'astro:content';
import { excerptFrom } from "../../lib/content";

export async function getStaticPaths() {
  const posts = await getCollection('journal');
  const tagset = new Set<string>();
  for (const p of posts) p.data.tags.forEach((t)=>tagset.add(t));
  return Array.from(tagset).map((t)=>({ params: { tag: t }}));
}

const { tag } = Astro.params;
const posts = (await getCollection('journal')).filter(p => p.data.tags.includes(tag!)).sort((a,b)=> +b.data.date - +a.data.date);
---
<BaseLayout title={`#${tag} — Tags`}>
  <aside class="sidebar">
    <section class="sidebar-section">
      <div class="sidebar-title">TAGS</div>
      <div class="filter-tags">
        <a class="tag" href="/tags">ALL TAGS</a>
      </div>
    </section>
  </aside>
  <main class="content-feed">
    <div class="announcement"><div class="announcement-text">#{tag}</div></div>
    <div class="feed-grid">
    {posts.map(p => {
      const ex = p.data.excerpt || excerptFrom(p.body);
      return (
        <article class="post">
          <div class="post-meta"><span class="post-date">{p.data.date.toISOString().slice(0,10)}</span></div>
          <h2 class="post-title">{p.data.title}</h2>
          {ex && <p class="post-excerpt">{ex}</p>}
          <div class="post-footer"><a class="read-more" href={`/journal/${p.slug}`}>READ ▸</a></div>
        </article>
      );
    })}
    </div>
  </main>
</BaseLayout>

