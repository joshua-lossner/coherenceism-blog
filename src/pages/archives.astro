---
import BaseLayout from "../layouts/BaseLayout.astro";
import { getCollection } from 'astro:content';
import { RIVERS } from "../content/rivers";

const posts = (await getCollection('journal')).filter(p => p.data.status !== 'draft').sort((a,b) => +b.data.date - +a.data.date);
// Group by YYYY.MM
const groups = new Map<string, typeof posts>();
for (const p of posts) {
  const d = p.data.date;
  const key = `${d.getFullYear()}.${String(d.getMonth()+1).padStart(2,'0')}`;
  const arr = groups.get(key) ?? [];
  arr.push(p);
  groups.set(key, arr);
}
const ordered = Array.from(groups.entries()).sort((a,b) => a[0] < b[0] ? 1 : -1);
---
<BaseLayout activeNav="ARCHIVES">
  <aside class="sidebar">
    <section class="sidebar-section">
      <div class="sidebar-title">RIVERS</div>
      <div class="filter-tags">
        <a class="tag" href="/">ALL POSTS</a>
        {Object.entries(RIVERS).map(([slug, r]) => (
          <a class="tag" style={`--rcolor:${r.color}`} href={`/rivers/${slug}`}>{r.label.toUpperCase()}</a>
        ))}
      </div>
    </section>
    <section class="sidebar-section">
      <div class="sidebar-title">ARCHIVE</div>
      <ul class="archive-list">
        {ordered.map(([k, items]) => (
          <li class="archive-item"><a href={`#${k}`} class="archive-date">{k}</a><span class="archive-count">{items.length}</span></li>
        ))}
      </ul>
    </section>
  </aside>
  <main id="main" class="content-feed">
    <div class="announcement"><div class="announcement-text">ARCHIVES // FULL TRANSMISSION HISTORY</div></div>
    {ordered.map(([label, items]) => (
      <section id={label} class="archive-section">
        <h2 class="sidebar-title" style="border-bottom:none;margin-top:1.5rem">{label}</h2>
        {items.map(post => (
          <article class="post">
            <div class="post-meta">
              <span class="post-date">{post.data.date.toISOString().slice(0,10)}</span>
            </div>
            <h3 class="post-title">{post.data.title}</h3>
            {post.data.excerpt && <p class="post-excerpt">{post.data.excerpt}</p>}
            <a class="read-more" href={`/journal/${post.slug}`}>READ â–¸</a>
          </article>
        ))}
      </section>
    ))}
    <script is:inline>
      function applyArchiveFilter() {
        const hash = decodeURIComponent(location.hash.replace('#',''));
        const sections = Array.from(document.querySelectorAll('.archive-section'));
        if (hash && sections.some(s => s.id === hash)) {
          sections.forEach(s => { s.style.display = (s.id === hash) ? '' : 'none'; });
        } else {
          sections.forEach(s => { s.style.display = ''; });
        }
      }
      window.addEventListener('hashchange', applyArchiveFilter);
      window.addEventListener('load', applyArchiveFilter);
    </script>
  </main>
</BaseLayout>
